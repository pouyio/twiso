import{useState as u}from"react";var a=({decode:o=!0,crossOrigin:n=""})=>t=>new Promise((s,c)=>{let e=new Image;n&&(e.crossOrigin=n),e.onload=()=>{o&&e.decode?e.decode().then(s).catch(c):s()},e.onerror=c,e.src=t});var f=o=>o.filter(n=>n),m=o=>Array.isArray(o)?o:[o],r={},l=(o,n)=>{let t=!1;return new Promise((s,c)=>{let e=i=>n(i).then(()=>{t=!0,s(i)});o.reduce((i,d)=>i.catch(()=>{if(!t)return e(d)}),e(o.shift())).catch(c)})};function g({srcList:o,imgPromise:n=a({decode:!0}),useSuspense:t=!0}){let[,s]=u(!1),c=f(m(o)),e=c.join("");if(r[e]||(r[e]={promise:l(c,n),cache:"pending",error:null}),r[e].cache==="resolved")return{src:r[e].src,isLoading:!1,error:null};if(r[e].cache==="rejected"){if(t)throw r[e].error;return{isLoading:!1,error:r[e].error,src:void 0}}if(r[e].promise.then(i=>{r[e]={...r[e],cache:"resolved",src:i},t||s(e)}).catch(i=>{r[e]={...r[e],cache:"rejected",error:i},t||s(e)}),t)throw r[e].promise;return{isLoading:!0,src:void 0,error:null}}export{a,g as b};
